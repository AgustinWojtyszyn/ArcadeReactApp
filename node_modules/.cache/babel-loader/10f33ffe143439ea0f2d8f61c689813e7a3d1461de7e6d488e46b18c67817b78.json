{"ast":null,"code":"var _jsxFileName = \"/home/aggustin/.vscode/RickAndMortyExplorer/src/components/Minesweeper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GameMenu from \"./GameMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZE = 8;\nconst MINES = 10;\nfunction generateBoard() {\n  const board = Array(SIZE * SIZE).fill({\n    mine: false,\n    revealed: false,\n    count: 0\n  });\n  let placed = 0;\n  while (placed < MINES) {\n    const idx = Math.floor(Math.random() * board.length);\n    if (!board[idx].mine) {\n      board[idx] = {\n        ...board[idx],\n        mine: true\n      };\n      placed++;\n    }\n  }\n  // Set counts\n  for (let i = 0; i < board.length; i++) {\n    if (board[i].mine) continue;\n    let count = 0;\n    const x = i % SIZE,\n      y = Math.floor(i / SIZE);\n    for (let dx = -1; dx <= 1; dx++) {\n      for (let dy = -1; dy <= 1; dy++) {\n        if (dx === 0 && dy === 0) continue;\n        const nx = x + dx,\n          ny = y + dy;\n        if (nx >= 0 && nx < SIZE && ny >= 0 && ny < SIZE) {\n          if (board[ny * SIZE + nx].mine) count++;\n        }\n      }\n    }\n    board[i] = {\n      ...board[i],\n      count\n    };\n  }\n  return board;\n}\nexport default function Minesweeper() {\n  _s();\n  const [board, setBoard] = useState(generateBoard());\n  const [lost, setLost] = useState(false);\n  const [won, setWon] = useState(false);\n  function reveal(idx) {\n    if (lost || won || board[idx].revealed) return;\n    if (board[idx].mine) {\n      setLost(true);\n      setBoard(board.map(cell => ({\n        ...cell,\n        revealed: true\n      })));\n      return;\n    }\n    const newBoard = [...board];\n    function flood(i) {\n      if (newBoard[i].revealed || newBoard[i].mine) return;\n      newBoard[i] = {\n        ...newBoard[i],\n        revealed: true\n      };\n      if (newBoard[i].count === 0) {\n        const x = i % SIZE,\n          y = Math.floor(i / SIZE);\n        for (let dx = -1; dx <= 1; dx++) {\n          for (let dy = -1; dy <= 1; dy++) {\n            if (dx === 0 && dy === 0) continue;\n            const nx = x + dx,\n              ny = y + dy;\n            if (nx >= 0 && nx < SIZE && ny >= 0 && ny < SIZE) {\n              flood(ny * SIZE + nx);\n            }\n          }\n        }\n      }\n    }\n    flood(idx);\n    setBoard(newBoard);\n    // Check win\n    if (newBoard.filter(c => !c.mine && c.revealed).length === SIZE * SIZE - MINES) setWon(true);\n  }\n  function reset() {\n    setBoard(generateBoard());\n    setLost(false);\n    setWon(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(GameMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"retro-title-game\",\n      children: \"Minesweeper 8-bit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"retro-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Instrucciones:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), \" Haz clic en las celdas para descubrirlas. Evita las minas \\uD83D\\uDCA3. Si revelas todas las celdas sin mina, \\xA1ganas! Usa \\\"Reiniciar\\\" para empezar de nuevo.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"1rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"retro-btn\",\n        onClick: reset,\n        children: \"Reiniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minesweeper-board\",\n      children: board.map((cell, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"minesweeper-cell\" + (cell.revealed ? \" revealed\" : \"\"),\n        onClick: () => reveal(idx),\n        disabled: lost || won,\n        children: cell.revealed ? cell.mine ? \"ðŸ’£\" : cell.count || \"\" : \"\"\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), lost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"retro-desc\",\n      children: \"\\xA1Perdiste! \\uD83D\\uDCA3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this), won && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"retro-desc\",\n      children: \"\\xA1Ganaste! \\uD83C\\uDF89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Minesweeper, \"kBN73ay+RZYxRv2U2bKaqgFSOVU=\");\n_c = Minesweeper;\nvar _c;\n$RefreshReg$(_c, \"Minesweeper\");","map":{"version":3,"names":["React","useState","GameMenu","jsxDEV","_jsxDEV","SIZE","MINES","generateBoard","board","Array","fill","mine","revealed","count","placed","idx","Math","floor","random","length","i","x","y","dx","dy","nx","ny","Minesweeper","_s","setBoard","lost","setLost","won","setWon","reveal","map","cell","newBoard","flood","filter","c","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","textAlign","marginBottom","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/aggustin/.vscode/RickAndMortyExplorer/src/components/Minesweeper.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport GameMenu from \"./GameMenu\";\n\nconst SIZE = 8;\nconst MINES = 10;\n\nfunction generateBoard() {\n  const board = Array(SIZE * SIZE).fill({ mine: false, revealed: false, count: 0 });\n  let placed = 0;\n  while (placed < MINES) {\n    const idx = Math.floor(Math.random() * board.length);\n    if (!board[idx].mine) {\n      board[idx] = { ...board[idx], mine: true };\n      placed++;\n    }\n  }\n  // Set counts\n  for (let i = 0; i < board.length; i++) {\n    if (board[i].mine) continue;\n    let count = 0;\n    const x = i % SIZE, y = Math.floor(i / SIZE);\n    for (let dx = -1; dx <= 1; dx++) {\n      for (let dy = -1; dy <= 1; dy++) {\n        if (dx === 0 && dy === 0) continue;\n        const nx = x + dx, ny = y + dy;\n        if (nx >= 0 && nx < SIZE && ny >= 0 && ny < SIZE) {\n          if (board[ny * SIZE + nx].mine) count++;\n        }\n      }\n    }\n    board[i] = { ...board[i], count };\n  }\n  return board;\n}\n\nexport default function Minesweeper() {\n  const [board, setBoard] = useState(generateBoard());\n  const [lost, setLost] = useState(false);\n  const [won, setWon] = useState(false);\n\n  function reveal(idx) {\n    if (lost || won || board[idx].revealed) return;\n    if (board[idx].mine) {\n      setLost(true);\n      setBoard(board.map(cell => ({ ...cell, revealed: true })));\n      return;\n    }\n    const newBoard = [...board];\n    function flood(i) {\n      if (newBoard[i].revealed || newBoard[i].mine) return;\n      newBoard[i] = { ...newBoard[i], revealed: true };\n      if (newBoard[i].count === 0) {\n        const x = i % SIZE, y = Math.floor(i / SIZE);\n        for (let dx = -1; dx <= 1; dx++) {\n          for (let dy = -1; dy <= 1; dy++) {\n            if (dx === 0 && dy === 0) continue;\n            const nx = x + dx, ny = y + dy;\n            if (nx >= 0 && nx < SIZE && ny >= 0 && ny < SIZE) {\n              flood(ny * SIZE + nx);\n            }\n          }\n        }\n      }\n    }\n    flood(idx);\n    setBoard(newBoard);\n    // Check win\n    if (newBoard.filter(c => !c.mine && c.revealed).length === SIZE * SIZE - MINES) setWon(true);\n  }\n\n  function reset() {\n    setBoard(generateBoard());\n    setLost(false);\n    setWon(false);\n  }\n\n  return (\n    <section>\n      <GameMenu />\n      <h2 className=\"retro-title-game\">Minesweeper 8-bit</h2>\n      <div className=\"retro-instructions\">\n        <strong>Instrucciones:</strong> Haz clic en las celdas para descubrirlas. Evita las minas ðŸ’£. Si revelas todas las celdas sin mina, Â¡ganas! Usa \"Reiniciar\" para empezar de nuevo.\n      </div>\n      <div style={{textAlign:\"center\", marginBottom:\"1rem\"}}>\n        <button className=\"retro-btn\" onClick={reset}>Reiniciar</button>\n      </div>\n      <div className=\"minesweeper-board\">\n        {board.map((cell, idx) => (\n          <button\n            key={idx}\n            className={\"minesweeper-cell\" + (cell.revealed ? \" revealed\" : \"\")}\n            onClick={() => reveal(idx)}\n            disabled={lost || won}\n          >\n            {cell.revealed ? (cell.mine ? \"ðŸ’£\" : cell.count || \"\") : \"\"}\n          </button>\n        ))}\n      </div>\n      {lost && <div className=\"retro-desc\">Â¡Perdiste! ðŸ’£</div>}\n      {won && <div className=\"retro-desc\">Â¡Ganaste! ðŸŽ‰</div>}\n    </section>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}