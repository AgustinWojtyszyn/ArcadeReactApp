{"ast":null,"code":"var _jsxFileName = \"/home/aggustin/.vscode/RickAndMortyExplorer/src/components/SudokuSolver.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZE = 9;\nfunction emptyBoard() {\n  _s();\n  return Array(SIZE * SIZE).fill(\"\");\n  function isValid(board, idx, val) {\n    const x = idx % SIZE,\n      y = Math.floor(idx / SIZE);\n    for (let i = 0; i < SIZE; i++) {\n      if (board[y * SIZE + i] === val) return false;\n      if (board[i * SIZE + x] === val) return false;\n    }\n    const sx = Math.floor(x / 3) * 3,\n      sy = Math.floor(y / 3) * 3;\n    for (let dy = 0; dy < 3; dy++) {\n      for (let dx = 0; dx < 3; dx++) {\n        if (board[(sy + dy) * SIZE + (sx + dx)] === val) return false;\n      }\n    }\n    return true;\n  }\n  function solve(board) {\n    const b = [...board];\n    function backtrack(idx = 0) {\n      if (idx === SIZE * SIZE) return true;\n      if (b[idx]) return backtrack(idx + 1);\n      for (let v = 1; v <= 9; v++) {\n        if (isValid(b, idx, String(v))) {\n          b[idx] = String(v);\n          if (backtrack(idx + 1)) return true;\n          b[idx] = \"\";\n        }\n      }\n      return false;\n    }\n    return backtrack() ? b : null;\n  }\n  const [board, setBoard] = useState(emptyBoard());\n  const [solved, setSolved] = useState(false);\n  const [error, setError] = useState(\"\");\n  function handleChange(idx, val) {\n    if (!/^[1-9]?$/.test(val)) return;\n    const newBoard = [...board];\n    newBoard[idx] = val;\n    setBoard(newBoard);\n    setSolved(false);\n    setError(\"\");\n  }\n  function handleSolve() {\n    const result = solve(board);\n    if (result) {\n      setBoard(result);\n      setSolved(true);\n      setError(\"\");\n    } else {\n      setError(\"No se puede resolver el tablero actual\");\n    }\n  }\n  function handleReset() {\n    setBoard(emptyBoard());\n    setSolved(false);\n    setError(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"retro-title-game\",\n      children: \"Sudoku Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"retro-btn\",\n        onClick: handleSolve,\n        children: \"Resolver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"retro-btn\",\n        onClick: handleReset,\n        children: \"Limpiar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-board\",\n      children: board.map((val, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sudoku-cell\" + (solved ? \" solved\" : \"\"),\n        value: val,\n        maxLength: 1,\n        onChange: e => handleChange(idx, e.target.value),\n        disabled: solved\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"retro-desc\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), solved && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"retro-desc\",\n      children: \"\\xA1Resuelto! \\uD83C\\uDF89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(emptyBoard, \"RAw5Mp6trqyhLE4eXXnSij+BeLg=\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SIZE","emptyBoard","_s","Array","fill","isValid","board","idx","val","x","y","Math","floor","i","sx","sy","dy","dx","solve","b","backtrack","v","String","setBoard","solved","setSolved","error","setError","handleChange","test","newBoard","handleSolve","result","handleReset","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","onClick","map","value","maxLength","onChange","e","target","disabled"],"sources":["/home/aggustin/.vscode/RickAndMortyExplorer/src/components/SudokuSolver.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\n\nconst SIZE = 9;\nfunction emptyBoard() {\n  return Array(SIZE * SIZE).fill(\"\");\n\nfunction isValid(board, idx, val) {\n  const x = idx % SIZE, y = Math.floor(idx / SIZE);\n  for (let i = 0; i < SIZE; i++) {\n    if (board[y * SIZE + i] === val) return false;\n    if (board[i * SIZE + x] === val) return false;\n  }\n  const sx = Math.floor(x / 3) * 3, sy = Math.floor(y / 3) * 3;\n  for (let dy = 0; dy < 3; dy++) {\n    for (let dx = 0; dx < 3; dx++) {\n      if (board[(sy + dy) * SIZE + (sx + dx)] === val) return false;\n    }\n  }\n  return true;\n}\n\nfunction solve(board) {\n  const b = [...board];\n  function backtrack(idx = 0) {\n    if (idx === SIZE * SIZE) return true;\n    if (b[idx]) return backtrack(idx + 1);\n    for (let v = 1; v <= 9; v++) {\n      if (isValid(b, idx, String(v))) {\n        b[idx] = String(v);\n        if (backtrack(idx + 1)) return true;\n        b[idx] = \"\";\n      }\n    }\n    return false;\n  }\n  return backtrack() ? b : null;\n}\n\n  const [board, setBoard] = useState(emptyBoard());\n  const [solved, setSolved] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  function handleChange(idx, val) {\n    if (!/^[1-9]?$/.test(val)) return;\n    const newBoard = [...board];\n    newBoard[idx] = val;\n    setBoard(newBoard);\n    setSolved(false);\n    setError(\"\");\n  }\n\n  function handleSolve() {\n    const result = solve(board);\n    if (result) {\n      setBoard(result);\n      setSolved(true);\n      setError(\"\");\n    } else {\n      setError(\"No se puede resolver el tablero actual\");\n    }\n  }\n\n  function handleReset() {\n    setBoard(emptyBoard());\n    setSolved(false);\n    setError(\"\");\n  }\n\n  return (\n    <section>\n      <h2 className=\"retro-title-game\">Sudoku Solver</h2>\n      <div style={{textAlign:\"center\", marginBottom:\"1rem\"}}>\n        <button className=\"retro-btn\" onClick={handleSolve}>Resolver</button>\n        <button className=\"retro-btn\" onClick={handleReset}>Limpiar</button>\n      </div>\n      <div className=\"sudoku-board\">\n        {board.map((val, idx) => (\n          <input\n            key={idx}\n            className={\"sudoku-cell\" + (solved ? \" solved\" : \"\")}\n            value={val}\n            maxLength={1}\n            onChange={e => handleChange(idx, e.target.value)}\n            disabled={solved}\n          />\n        ))}\n      </div>\n      {error && <div className=\"retro-desc\">{error}</div>}\n      {solved && <div className=\"retro-desc\">Â¡Resuelto! ðŸŽ‰</div>}\n    </section>\n  );\n}"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAG,CAAC;AACd,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,OAAOC,KAAK,CAACH,IAAI,GAAGA,IAAI,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC;EAEpC,SAASC,OAAOA,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;IAChC,MAAMC,CAAC,GAAGF,GAAG,GAAGP,IAAI;MAAEU,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,GAAG,GAAGP,IAAI,CAAC;IAChD,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,IAAI,EAAEa,CAAC,EAAE,EAAE;MAC7B,IAAIP,KAAK,CAACI,CAAC,GAAGV,IAAI,GAAGa,CAAC,CAAC,KAAKL,GAAG,EAAE,OAAO,KAAK;MAC7C,IAAIF,KAAK,CAACO,CAAC,GAAGb,IAAI,GAAGS,CAAC,CAAC,KAAKD,GAAG,EAAE,OAAO,KAAK;IAC/C;IACA,MAAMM,EAAE,GAAGH,IAAI,CAACC,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MAAEM,EAAE,GAAGJ,IAAI,CAACC,KAAK,CAACF,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IAC5D,KAAK,IAAIM,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,CAAC,EAAEA,EAAE,EAAE,EAAE;MAC7B,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,CAAC,EAAEA,EAAE,EAAE,EAAE;QAC7B,IAAIX,KAAK,CAAC,CAACS,EAAE,GAAGC,EAAE,IAAIhB,IAAI,IAAIc,EAAE,GAAGG,EAAE,CAAC,CAAC,KAAKT,GAAG,EAAE,OAAO,KAAK;MAC/D;IACF;IACA,OAAO,IAAI;EACb;EAEA,SAASU,KAAKA,CAACZ,KAAK,EAAE;IACpB,MAAMa,CAAC,GAAG,CAAC,GAAGb,KAAK,CAAC;IACpB,SAASc,SAASA,CAACb,GAAG,GAAG,CAAC,EAAE;MAC1B,IAAIA,GAAG,KAAKP,IAAI,GAAGA,IAAI,EAAE,OAAO,IAAI;MACpC,IAAImB,CAAC,CAACZ,GAAG,CAAC,EAAE,OAAOa,SAAS,CAACb,GAAG,GAAG,CAAC,CAAC;MACrC,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3B,IAAIhB,OAAO,CAACc,CAAC,EAAEZ,GAAG,EAAEe,MAAM,CAACD,CAAC,CAAC,CAAC,EAAE;UAC9BF,CAAC,CAACZ,GAAG,CAAC,GAAGe,MAAM,CAACD,CAAC,CAAC;UAClB,IAAID,SAAS,CAACb,GAAG,GAAG,CAAC,CAAC,EAAE,OAAO,IAAI;UACnCY,CAAC,CAACZ,GAAG,CAAC,GAAG,EAAE;QACb;MACF;MACA,OAAO,KAAK;IACd;IACA,OAAOa,SAAS,CAAC,CAAC,GAAGD,CAAC,GAAG,IAAI;EAC/B;EAEE,MAAM,CAACb,KAAK,EAAEiB,QAAQ,CAAC,GAAG1B,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;EAChD,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAAS+B,YAAYA,CAACrB,GAAG,EAAEC,GAAG,EAAE;IAC9B,IAAI,CAAC,UAAU,CAACqB,IAAI,CAACrB,GAAG,CAAC,EAAE;IAC3B,MAAMsB,QAAQ,GAAG,CAAC,GAAGxB,KAAK,CAAC;IAC3BwB,QAAQ,CAACvB,GAAG,CAAC,GAAGC,GAAG;IACnBe,QAAQ,CAACO,QAAQ,CAAC;IAClBL,SAAS,CAAC,KAAK,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;EACd;EAEA,SAASI,WAAWA,CAAA,EAAG;IACrB,MAAMC,MAAM,GAAGd,KAAK,CAACZ,KAAK,CAAC;IAC3B,IAAI0B,MAAM,EAAE;MACVT,QAAQ,CAACS,MAAM,CAAC;MAChBP,SAAS,CAAC,IAAI,CAAC;MACfE,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,MAAM;MACLA,QAAQ,CAAC,wCAAwC,CAAC;IACpD;EACF;EAEA,SAASM,WAAWA,CAAA,EAAG;IACrBV,QAAQ,CAACtB,UAAU,CAAC,CAAC,CAAC;IACtBwB,SAAS,CAAC,KAAK,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;EACd;EAEA,oBACE5B,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAIoC,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDxC,OAAA;MAAKyC,KAAK,EAAE;QAACC,SAAS,EAAC,QAAQ;QAAEC,YAAY,EAAC;MAAM,CAAE;MAAAR,QAAA,gBACpDnC,OAAA;QAAQoC,SAAS,EAAC,WAAW;QAACQ,OAAO,EAAEZ,WAAY;QAAAG,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrExC,OAAA;QAAQoC,SAAS,EAAC,WAAW;QAACQ,OAAO,EAAEV,WAAY;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACNxC,OAAA;MAAKoC,SAAS,EAAC,cAAc;MAAAD,QAAA,EAC1B5B,KAAK,CAACsC,GAAG,CAAC,CAACpC,GAAG,EAAED,GAAG,kBAClBR,OAAA;QAEEoC,SAAS,EAAE,aAAa,IAAIX,MAAM,GAAG,SAAS,GAAG,EAAE,CAAE;QACrDqB,KAAK,EAAErC,GAAI;QACXsC,SAAS,EAAE,CAAE;QACbC,QAAQ,EAAEC,CAAC,IAAIpB,YAAY,CAACrB,GAAG,EAAEyC,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;QACjDK,QAAQ,EAAE1B;MAAO,GALZjB,GAAG;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLb,KAAK,iBAAI3B,OAAA;MAAKoC,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAER;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAClDf,MAAM,iBAAIzB,OAAA;MAAKoC,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd;AAACrC,EAAA,CAxFQD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}